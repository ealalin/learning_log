"""
c:\learning_log  has as files:
db.sqllite3; learning.log; learning_logs; ll_env; manage.py  no setting'py!!!!

c:\learning_log\learning_log has as files
settings.py; __init__.py; asgi.py; urls.py; asgi.py 

c:\learning.log\learning.logs has as files:
admin.py; __init__.py; migrations; models.py; tests.py; views.py

Django settings for learning_log project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os     # cor 22/04/2024

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%)a543smid&l1&&=h&&wu69bozkz3*hl()$7b5ip6&1!4v7%*='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

APPEND_SLASH = True       # add by alain

# Application definition

INSTALLED_APPS = (
 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap3',                   # Third party apps 15/02/2024
    'learning_logs',                # add by alain
    'users',                         # add the 5/03/2024
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
   
]

ROOT_URLCONF = 'learning_log.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
     #   'DIRS': [],
         'DIRS': [BASE_DIR / 'templates/learning_logs'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'learning_log.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# My setting

LOGIN_URL = 'users/login'

#settings for django-bootstrap3
BOOTSTRAP = {
    'include_jquery': True,
}

# add heroku from c:\learning_log ...mistake 24/04/2024
# Heroku settings

cwd = os.getcwd()
if cwd == '/app' or cwd[:4] == '/tmp':
   import dj_database_url
   DATABASES = {
         'default': dj_database_url.config(default='postgres://localhost')
    }

# Honor the 'X-forwarded-proto' header for request.is_secure().
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO' , 'https')

# Allow all hast headers
ALLOWED_HOSTS = ['*']   

# static configuration here done
# BASE_DIR = os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# STATIC_ROOT = 'staticfiles'   coe 24/04/202

# Change STATIC_ROOT to use os.path.join(BASE_DIR, 'static')
STATIC_ROOT = os.path.join(BASE_DIR, 'static')       # cor 24/04/2024
STATICFILES_DIRS = [                                 #cor 25/04/2024
     # Add the directory 'C:\learning_log\static'
     'C:\\Tempory\static',
#     # Any additional directories for static files can be added here
 ]

